// <auto-generated />
using System;
using GraphQLWebApp1.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQLWebApp1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200127094302_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQLWebApp1.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("904fd14e-46b9-42eb-9733-1b8d45c93ef9"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("322499f0-4f88-4992-aadc-abed4bcbff7b"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("7bab63c3-3153-42ff-b784-a214dd6fb7c7"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("9b1b4277-efe9-42d8-a4d7-1704300de460"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f2c03a6d-bd36-45f9-b351-3935d8985bca"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("9b1b4277-efe9-42d8-a4d7-1704300de460"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQLWebApp1.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322499f0-4f88-4992-aadc-abed4bcbff7b"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("9b1b4277-efe9-42d8-a4d7-1704300de460"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQLWebApp1.Entities.Account", b =>
                {
                    b.HasOne("GraphQLWebApp1.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
